<?xml version="1.0" encoding="UTF-8"?>
<!--
	 ***************************************************************
	 * Licensed to the Apache Software Foundation (ASF) under one
	 * or more contributor license agreements.  See the NOTICE file
	 * distributed with this work for additional information
	 * regarding copyright ownership.  The ASF licenses this file
	 * to you under the Apache License, Version 2.0 (the
	 * "License"); you may not use this file except in compliance
	 * with the License.  You may obtain a copy of the License at
         *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 * 
	 * Unless required by applicable law or agreed to in writing,
	 * software distributed under the License is distributed on an
	 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	 * KIND, either express or implied.  See the License for the
	 * specific language governing permissions and limitations
	 * under the License.
	 ***************************************************************
   -->
<!-- Descriptor for TestElementAnnotator. -->
<analysisEngineDescription xmlns="http://uima.apache.org/resourceSpecifier">
	<frameworkImplementation>org.apache.uima.java</frameworkImplementation>
	<primitive>true</primitive>
	<annotatorImplementationName>qa.NgramAnnotator</annotatorImplementationName>

	<analysisEngineMetaData>
		<name>NgramAnnotatorDescriptor</name>
		<description>The NgramAnnotator converts sequences of Token annotations into Ngrams. 

A parameter allows the user to specify the which NGram orders will be created. 
 - Ex: 1: setting the parameter to "1,2,3" will create unigrams, bigrams, and trigrams. 
 - Ex: 2: setting the parameter to "2,4" would create bigrams and 4-grams.

Each time an NGram annotation is created:
- The start feature is set equal to the start of the first Token in the NGram.
- The end feature is set equal to the end of the last Token in the NGram.
- The elements feature is an array that contains pointers to each Token in the NGram.
- The elementsType feature is set to “Token”.  (Note: this could become parameterized in future releases, if types other than Tokens are used in NGram models)
- The ngramOrder feature tells whether the NGram is a unigram (“1”), bigram (“2”), etc – this may be used in future releases if I develop a machine learning model that weights the NGrams differently.
- The source feature indicates whether the NGram came from a Question or an Answer. This is used in downstream processing to compare Answer NGrams against their corresponding Question NGrams.</description>
		<version>1.0</version>
		<vendor>Lars Mahler</vendor>
		
		<configurationParameters>
      <configurationParameter>
        <name>NgramOrder</name>
        <description>Order (or cardinality) of ngram: 1 (unigram), 2 (bigram), 3 (trigram), etc. Multiple values may be selected, thus creating unigrams, bigrams, trigrams, and higher-order ngrams simultaneously.</description>
        <type>Integer</type>
        <multiValued>true</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
    </configurationParameters>
    <configurationParameterSettings>
      <nameValuePair>
        <name>NgramOrder</name>
        <value>
          <array>
            <integer>1</integer>
            <integer>2</integer>
            <integer>3</integer>
          </array>
        </value>
      </nameValuePair>
    </configurationParameterSettings>
    <!-- TypeSystem Definition -->
		<typeSystemDescription>
			<imports>
				<import location="deiis_types.xml"/>
			</imports>
		</typeSystemDescription>
		
		<typePriorities/>
    <fsIndexCollection/>
    <!-- Capabilities: Inputs, Outputs, and Preconditions -->
		<capabilities>
			<capability>
				<inputs>
          <type allAnnotatorFeatures="true">edu.cmu.deiis.types.Token</type>
        </inputs>
				<outputs>
          <type allAnnotatorFeatures="true">edu.cmu.deiis.types.NGram</type>
        </outputs>
			<languagesSupported/>
      </capability>
		</capabilities>
		<operationalProperties>
			<modifiesCas>true</modifiesCas>
			<multipleDeploymentAllowed>true</multipleDeploymentAllowed>
			<outputsNewCASes>false</outputsNewCASes>
		</operationalProperties>
	</analysisEngineMetaData>
<resourceManagerConfiguration/>
</analysisEngineDescription>
